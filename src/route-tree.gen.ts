/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/root'
import { Route as mainLayoutImport } from './routes/main/layout'
import { Route as authLayoutImport } from './routes/auth/layout'
import { Route as mainBecomeSellerImport } from './routes/main/become-seller'
import { Route as authSignUpImport } from './routes/auth/sign-up'
import { Route as authSignInImport } from './routes/auth/sign-in'
import { Route as indexImport } from './routes/index'

// Create/Update Routes

const mainLayoutRoute = mainLayoutImport.update({
  id: '/_main-layout-id',
  getParentRoute: () => rootRoute,
} as any)

const authLayoutRoute = authLayoutImport.update({
  id: '/_auth-layout-id',
  getParentRoute: () => rootRoute,
} as any)

const mainBecomeSellerRoute = mainBecomeSellerImport.update({
  id: '/become-seller',
  path: '/become-seller',
  getParentRoute: () => mainLayoutRoute,
} as any)

const authSignUpRoute = authSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => authLayoutRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => authLayoutRoute,
} as any)

const indexRoute = indexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => mainLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth-layout-id': {
      id: '/_auth-layout-id'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_main-layout-id': {
      id: '/_main-layout-id'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof mainLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_main-layout-id/': {
      id: '/_main-layout-id/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof indexImport
      parentRoute: typeof mainLayoutImport
    }
    '/_auth-layout-id/sign-in': {
      id: '/_auth-layout-id/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof authLayoutImport
    }
    '/_auth-layout-id/sign-up': {
      id: '/_auth-layout-id/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof authLayoutImport
    }
    '/_main-layout-id/become-seller': {
      id: '/_main-layout-id/become-seller'
      path: '/become-seller'
      fullPath: '/become-seller'
      preLoaderRoute: typeof mainBecomeSellerImport
      parentRoute: typeof mainLayoutImport
    }
  }
}

// Create and export the route tree

interface authLayoutRouteChildren {
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

interface mainLayoutRouteChildren {
  indexRoute: typeof indexRoute
  mainBecomeSellerRoute: typeof mainBecomeSellerRoute
}

const mainLayoutRouteChildren: mainLayoutRouteChildren = {
  indexRoute: indexRoute,
  mainBecomeSellerRoute: mainBecomeSellerRoute,
}

const mainLayoutRouteWithChildren = mainLayoutRoute._addFileChildren(
  mainLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof mainLayoutRouteWithChildren
  '/': typeof indexRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/become-seller': typeof mainBecomeSellerRoute
}

export interface FileRoutesByTo {
  '': typeof authLayoutRouteWithChildren
  '/': typeof indexRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/become-seller': typeof mainBecomeSellerRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth-layout-id': typeof authLayoutRouteWithChildren
  '/_main-layout-id': typeof mainLayoutRouteWithChildren
  '/_main-layout-id/': typeof indexRoute
  '/_auth-layout-id/sign-in': typeof authSignInRoute
  '/_auth-layout-id/sign-up': typeof authSignUpRoute
  '/_main-layout-id/become-seller': typeof mainBecomeSellerRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/sign-in' | '/sign-up' | '/become-seller'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/' | '/sign-in' | '/sign-up' | '/become-seller'
  id:
    | '__root__'
    | '/_auth-layout-id'
    | '/_main-layout-id'
    | '/_main-layout-id/'
    | '/_auth-layout-id/sign-in'
    | '/_auth-layout-id/sign-up'
    | '/_main-layout-id/become-seller'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authLayoutRoute: typeof authLayoutRouteWithChildren
  mainLayoutRoute: typeof mainLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  authLayoutRoute: authLayoutRouteWithChildren,
  mainLayoutRoute: mainLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "root.tsx",
      "children": [
        "/_auth-layout-id",
        "/_main-layout-id"
      ]
    },
    "/_auth-layout-id": {
      "filePath": "auth/layout.tsx",
      "children": [
        "/_auth-layout-id/sign-in",
        "/_auth-layout-id/sign-up"
      ]
    },
    "/_main-layout-id": {
      "filePath": "main/layout.tsx",
      "children": [
        "/_main-layout-id/",
        "/_main-layout-id/become-seller"
      ]
    },
    "/_main-layout-id/": {
      "filePath": "index.tsx",
      "parent": "/_main-layout-id"
    },
    "/_auth-layout-id/sign-in": {
      "filePath": "auth/sign-in.tsx",
      "parent": "/_auth-layout-id"
    },
    "/_auth-layout-id/sign-up": {
      "filePath": "auth/sign-up.tsx",
      "parent": "/_auth-layout-id"
    },
    "/_main-layout-id/become-seller": {
      "filePath": "main/become-seller.tsx",
      "parent": "/_main-layout-id"
    }
  }
}
ROUTE_MANIFEST_END */
